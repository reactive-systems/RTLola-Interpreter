input a: UInt64

output a_counter: UInt64 @a := a_counter.offset(by: -1).defaults(to: 0) + 1

output b(p: UInt64) @1Hz spawn with a_counter if a = 1 close if true then true else b(p) := a.hold(or: 0) == 2

trigger @2Hz b(1).hold(or: false) "delay 1 fired"
trigger @2Hz b(2).hold(or: false) "delay 2 fired"
trigger @2Hz b(3).hold(or: false) "delay 3 fired"
trigger @2Hz b(4).hold(or: false) "delay 4 fired"
trigger @2Hz b(5).hold(or: false) "delay 5 fired"
trigger @2Hz b(6).hold(or: false) "delay 6 fired"
trigger @2Hz b(7).hold(or: false) "delay 7 fired"
trigger @2Hz b(8).hold(or: false) "delay 8 fired"
trigger @2Hz b(9).hold(or: false) "delay 9 fired"
trigger @2Hz b(10).hold(or: false) "delay 10 fired"
trigger @2Hz b(11).hold(or: false) "delay 11 fired"
trigger @2Hz b(12).hold(or: false) "delay 12 fired"
trigger @2Hz b(13).hold(or: false) "delay 13 fired"